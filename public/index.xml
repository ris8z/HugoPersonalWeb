<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on ris8z</title><link>https://www.ris8z.com/</link><description>Recent content in Home on ris8z</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 11 Jun 2024 22:04:07 +0100</lastBuildDate><atom:link href="https://www.ris8z.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Rendering a 3D Donut in the terminal</title><link>https://www.ris8z.com/projects/rendering-3d-donut/</link><pubDate>Tue, 11 Jun 2024 22:04:07 +0100</pubDate><guid>https://www.ris8z.com/projects/rendering-3d-donut/</guid><description>&lt;h2 id="demo">Demo&lt;/h2>
&lt;video controls autoplay loop muted playsinline width="650">
&lt;source src="donut.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;h2 id="descripiton">Descripiton&lt;/h2>
&lt;p>Rendering a 3D Donut in the terminal: created from scratch using C and concepts such as
Prospective, Light Model , Matrix Transformation. This project increased understanding of Linear
Algebra.&lt;/p>
&lt;h2 id="code--more-info">Code &amp;amp; more Info&lt;/h2>
&lt;p>&lt;a href="https://github.com/ris8z/Donut?tab=readme-ov-file">Github public repo&lt;/a>&lt;/p></description></item><item><title>Snake Game in C</title><link>https://www.ris8z.com/projects/simple-snake-game/</link><pubDate>Fri, 12 Apr 2024 02:19:55 +0100</pubDate><guid>https://www.ris8z.com/projects/simple-snake-game/</guid><description>&lt;h2 id="demo">Demo&lt;/h2>
&lt;video controls autoplay loop muted playsinline width="650">
&lt;source src="snake.mp4" type="video/mp4">
Your browser does not support the video tag.
&lt;/video>
&lt;h2 id="descripiton">Descripiton&lt;/h2>
&lt;p>This is a simple &lt;strong>Snake game implemented in C&lt;/strong>, playable directly from your terminal. It uses basic C structures,
ANSI escape codes for colors, and grid logic to simulate a real-time game loop — all without any external libraries.&lt;/p>
&lt;h2 id="code--more-info">Code &amp;amp; more Info&lt;/h2>
&lt;p>&lt;a href="https://github.com/ris8z/Snake">Github public repo&lt;/a>&lt;/p></description></item><item><title>Own shell in C</title><link>https://www.ris8z.com/projects/terminal-emuletor/</link><pubDate>Mon, 11 Mar 2024 22:04:04 +0100</pubDate><guid>https://www.ris8z.com/projects/terminal-emuletor/</guid><description>&lt;h2 id="descripiton">Descripiton&lt;/h2>
&lt;p>Own Shell: developed using C, can handle input file (batch mode), I/O redirection, background
mode and simple error handling. Forking process and file descriptor concepts have been used. Also
created a comprehensive documentation and a short user manual.&lt;/p>
&lt;h2 id="code--more-info">Code &amp;amp; more Info&lt;/h2>
&lt;p>&lt;a href="https://github.com/ris8z/myshell/tree/master">Github Public Repo&lt;/a>&lt;/p></description></item><item><title>Python Minecraft Farming BOT</title><link>https://www.ris8z.com/projects/minecraft-farm-bot/</link><pubDate>Mon, 11 Dec 2023 22:04:07 +0100</pubDate><guid>https://www.ris8z.com/projects/minecraft-farm-bot/</guid><description>&lt;h2 id="descripiton">Descripiton&lt;/h2>
&lt;p>Python Minecraft Farming BOT: implemented using pyauto, time and keyboard modules. Designed
to automate the boring aspects of the game, even add some basic logic to read the logs and
understand the best time to start and stop selling items&lt;/p>
&lt;h2 id="idea">Idea&lt;/h2>
&lt;p>It&amp;rsquo;s simple, basically register all your action in codelines,
just spam hits and accumalte items, then start selling until you earn around 0$ by each click
(get this info from the logs by using regex)&lt;/p></description></item><item><title>Resume</title><link>https://www.ris8z.com/pages/resume/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.ris8z.com/pages/resume/</guid><description>&lt;h2 id="third-level-education">Third Level Education&lt;/h2>
&lt;p>&lt;strong>Dublin City University (DCU), Ireland&lt;/strong>&lt;br>
&lt;em>B.Sc. in Computer Science – Year 3 (Ongoing)&lt;/em>&lt;/p>
&lt;ul>
&lt;li>Achieved a &lt;strong>First Class Honours (1.1)&lt;/strong> in 2nd year&lt;/li>
&lt;li>Ranked &lt;strong>Top 5 overall&lt;/strong> in the 2nd year &lt;em>PassList&lt;/em>&lt;/li>
&lt;li>Strong results across core modules, including:
&lt;ul>
&lt;li>&lt;strong>Operating Systems:&lt;/strong> 97%&lt;/li>
&lt;li>&lt;strong>DevOps:&lt;/strong> 95%&lt;/li>
&lt;li>&lt;strong>Linear Algebra, Logic, Full Stack Development:&lt;/strong> 91%&lt;/li>
&lt;li>&lt;strong>Probability &amp;amp; Statistics:&lt;/strong> 90%&lt;/li>
&lt;li>&lt;strong>Object-Oriented Programming (Java):&lt;/strong> 89%&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="it-skills--projects">IT Skills &amp;amp; Projects&lt;/h2>
&lt;h3 id="it-skills">IT Skills&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Languages:&lt;/strong> Python, Java, C, JavaScript, Prolog, R, Haskell&lt;/li>
&lt;li>&lt;strong>Back-end:&lt;/strong> Django, Flask (Python); Spring Boot (Java)&lt;/li>
&lt;li>&lt;strong>Front-end:&lt;/strong> React, Bootstrap, HTML5/CSS3&lt;/li>
&lt;li>&lt;strong>DevOps:&lt;/strong> Git, GitHub, GitLab, Docker, Shell scripting, AWS&lt;/li>
&lt;li>&lt;strong>Operating Systems:&lt;/strong> Confident with GNU/Linux and terminal environments&lt;/li>
&lt;li>&lt;strong>Networking &amp;amp; Systems:&lt;/strong> OSI model, load balancing, system architecture principles&lt;/li>
&lt;li>&lt;strong>Workflow:&lt;/strong> Vim/Neovim user, strong command line proficiency&lt;/li>
&lt;/ul>
&lt;h3 id="it-projects-completed">IT Projects Completed&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Python Minecraft Farming BOT&lt;/strong>&lt;br>
Built using &lt;code>pyautogui&lt;/code>, &lt;code>time&lt;/code>, and &lt;code>keyboard&lt;/code> modules. Designed to automate repetitive in-game tasks and included basic logic to parse logs and determine optimal timing for item selling.&lt;/p></description></item></channel></rss>